Index: app/concepts/api/v1/visits/serializers/show.rb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># frozen_string_literal: true\n\nmodule Api\n  module V1\n    module Visits\n      module Serializers\n        class Show < ApplicationSerializer\n          set_type :visit\n\n          attributes :id, :questionnaire_id, :visited_at, :brigadist, :team, :city, :sector, :wedge,\n                     :visit_permission, :host, :answers, :notes\n\n          translate_multilang_values = ->(collection, language = 'es', current_value = nil) {\n            return '' unless current_value\n\n            values = Array(current_value)\n\n            values.map do |val|\n              match = collection.find do |q|\n                q[:name_en] == val || q[:name_es] == val || q[:name_pt] == val\n              end\n\n              if match\n                match[:\"name_#{language}\"]\n              else\n                val\n              end\n            end\n          }\n\n          attribute :visited_at do |object|\n            @house = object.house\n            @city = @house.city\n            @sector = @house.neighborhood\n            @wedge = @house.wedge\n            object.visited_at\n          end\n\n          attribute :team do |object|\n            {\n              id: object.team_id,\n              name: object.team.name,\n            }\n          end\n\n          attribute :brigadist do |object|\n\n            if object.user_account\n              {\n                id: object.user_account.id,\n                fullName: object.user_account.full_name,\n              }\n            else\n              {\n                id: nil,\n                fullName: 'Usuario eliminado',\n              }\n            end\n          end\n\n          attribute :city do |object|\n            {\n              id: @city.id,\n              name: @city.name,\n            }\n          end\n\n          attribute :sector do |object|\n            {\n              id: @sector.id,\n              name: @sector.name,\n            }\n          end\n\n          attribute :visitStatus do |object|\n            object.status\n          end\n\n          attribute :wedge do |object|\n            {\n              id: @wedge.id,\n              name: @wedge.name,\n            }\n          end\n\n          attribute :house do |visit|\n            next unless visit.house\n\n            {\n              id: visit.house.id,\n              reference_code: visit.house.reference_code,\n              status: visit.house.status\n            }\n          end\n\n          attribute :host do |visit|\n            next unless visit.host\n\n            translate_multilang_values.call(Constants::VisitConstants::HOST, visit.language, visit.host.split(', '))\n          end\n\n          attribute :modification_history do |visit|\n            versions = visit.versions\n            next nil unless versions\n            next unless versions.last\n\n            modify_by = JSON.parse(visit.versions.last.whodunnit)['full_name'] if visit.versions.last.whodunnit\n            {\n              lastModified: visit.updated_at,\n              modifiedBy: modify_by\n            }\n          end\n\n          attribute :family_education_topics do |visit|\n            Constants::DownloadCsvConstants::QUESTION_TALK_ABOUT_TOPICS.map do |item|\n              {\n                name: item[:\"name_#{visit.language}\"],\n                checked: item[:\"name_#{visit.language}\"].in?(visit.family_education_topics)\n              }\n            end\n          end\n\n          attribute :inspections do |visit|\n            next unless visit.inspections.any?\n\n            visit.inspections.map do |inspection|\n              {\n                id: inspection.id,\n                breedingSiteType: {\n                  breeding_site_type_id: inspection.breeding_site_type_id,\n                  breeding_site_type_name: inspection.breeding_site_type&.send(\"name_#{visit.language}\"),\n                },\n                eliminationMethodType: {\n                  elimination_method_type_id: inspection.elimination_method_type_id,\n                  elimination_method_type_name: inspection.elimination_method_type&.send(\"name_#{visit.language}\"),\n                  elimination_method_type_other: inspection.other_elimination_method\n                },\n                waterSourceType: inspection.water_source_types.map do |wst|\n                  {\n                    id: wst.id,\n                    name: wst&.send(\"name_#{visit.language}\")\n                  }\n                end,\n                container_protections: inspection.container_protections.map do |protection|\n                  {\n                    id: protection.id,\n                    name: protection&.send(\"name_#{visit.language}\")\n                  }\n                end,\n                other_container_protection: inspection.other_protection,\n                inspection_type_contents: [\n                  inspection.type_contents.map do |content|\n                    {\n                      id: content.id,\n                      name: content.send(\"name_#{visit.language}\")\n                    }\n                  end\n                ],\n                has_water: inspection.has_water,\n                was_chemically_treated: Constants::DownloadCsvConstants::WAS_CHEMICALLY_TRANSLATIONS.map do |item|\n                  {\n                    name: item[:\"name_#{visit.language}\"],\n                    checked: item[:\"name_#{visit.language}\"] == inspection.was_chemically_treated\n                  }\n                end,\n              container_test_result: inspection.container_test_result\n              }\n            end\n          end\n        end\n      end\n    end\n  end\nend\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/concepts/api/v1/visits/serializers/show.rb b/app/concepts/api/v1/visits/serializers/show.rb
--- a/app/concepts/api/v1/visits/serializers/show.rb	(revision 86def2ee6bbf38f9ac2057b745eec88460f10e1a)
+++ b/app/concepts/api/v1/visits/serializers/show.rb	(date 1751285187304)
@@ -10,7 +10,7 @@
           attributes :id, :questionnaire_id, :visited_at, :brigadist, :team, :city, :sector, :wedge,
                      :visit_permission, :host, :answers, :notes
 
-          translate_multilang_values = ->(collection, language = 'es', current_value = nil) {
+          translate_multilang_values = ->(collection, language = 'en', current_value = nil) {
             return '' unless current_value
 
             values = Array(current_value)
